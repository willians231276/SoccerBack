@model Backend.Models.TournamentTeamView

@{
    ViewBag.Title = "EditTeam";
}

<h2>Edit Team</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Tournament Team</h4>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TournamentTeamId)
    @Html.HiddenFor(model => model.TournamentGroupId)

    <div class="form-group">
        @Html.LabelFor(model => model.Team.LeagueId, "League", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("LeagueId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Team.LeagueId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TeamId, "TeamId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TeamId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MatchesPlayed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MatchesPlayed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MatchesPlayed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MatchesWon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MatchesWon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MatchesWon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MatchesLost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MatchesLost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MatchesLost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MatchesTied, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MatchesTied, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MatchesTied, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FavorGoals, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FavorGoals, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FavorGoals, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AgainstGoals, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AgainstGoals, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AgainstGoals, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
